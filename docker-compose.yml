services:
  db:
    image: postgres:16-alpine
    container_name: entrevistes-db
    environment:
      POSTGRES_USER: entrevistes
      POSTGRES_PASSWORD: entrevistes
      POSTGRES_DB: entrevistes
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=ca_ES.UTF-8 --lc-ctype=ca_ES.UTF-8"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U entrevistes -d entrevistes"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - entrevistes-network

  service:
    build: 
      context: ./service
      dockerfile: Dockerfile
    container_name: entrevistes-service
    environment:
      NODE_ENV: development
      PORT: 8081
      ALLOWED_DOMAIN: insbitacola.cat
      DATABASE_URL: postgresql://entrevistes:entrevistes@db:5432/entrevistes
      # Google OAuth Client ID
      GOOGLE_CLIENT_ID: 582773400896-0io28jocfebl0aec7u5bnr6up367chs6.apps.googleusercontent.com
      # Credenciales Google (opcional para desarrollo)
      GOOGLE_CLIENT_EMAIL: ${GOOGLE_CLIENT_EMAIL:-}
      GOOGLE_PRIVATE_KEY: ${GOOGLE_PRIVATE_KEY:-}
      SHEETS_SPREADSHEET_ID: ${SHEETS_SPREADSHEET_ID:-}
      ANY_ACTUAL: ${ANY_ACTUAL:-2025-2026}
      # Logging para desarrollo
      LOG_LEVEL: debug
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "127.0.0.1:8081:8081"
    volumes:
      - ./service/src:/app/src:ro
      - ./service/package.json:/app/package.json:ro
      - ./service/node_modules:/app/node_modules:cached
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - entrevistes-network
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: prod
    container_name: entrevistes-client
    environment:
      # Usar localhost para que el navegador acceda al backend
      VITE_BACKEND_BASE: http://localhost:8081
      VITE_APP_NAME: Entrevistes App (Dev)
      VITE_APP_VERSION: 1.0.0-dev
    depends_on:
      service:
        condition: service_healthy
    ports:
      - "127.0.0.1:5174:5173"
    # Desactivar vol√∫menes para evitar reinicio infinito en desarrollo con Docker
    # Para desarrollo local, ejecutar el cliente fuera de Docker
    networks:
      - entrevistes-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5173 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s

volumes:
  db_data:
    driver: local

networks:
  entrevistes-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
