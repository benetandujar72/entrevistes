version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: entrevistes-db-prod
    environment:
      POSTGRES_USER: ${DB_USER:-entrevistes}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-entrevistes}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=ca_ES.UTF-8 --lc-ctype=ca_ES.UTF-8"
    volumes:
      - db_data_prod:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-entrevistes} -d ${DB_NAME:-entrevistes}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - entrevistes-network

  service:
    build:
      context: ./service
      dockerfile: Dockerfile.prod
    container_name: entrevistes-service-prod
    environment:
      NODE_ENV: production
      PORT: ${SERVICE_PORT:-8081}
      ALLOWED_DOMAIN: ${ALLOWED_DOMAIN}
      DATABASE_URL: postgresql://${DB_USER:-entrevistes}:${DB_PASSWORD}@db:5432/${DB_NAME:-entrevistes}
      
      # Google API Credentials
      GOOGLE_CLIENT_EMAIL: ${GOOGLE_CLIENT_EMAIL}
      GOOGLE_PRIVATE_KEY: ${GOOGLE_PRIVATE_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      SHEETS_SPREADSHEET_ID: ${SHEETS_SPREADSHEET_ID}
      
      # Application Settings
      ANY_ACTUAL: ${ANY_ACTUAL}
      DISABLE_AUTH: ${DISABLE_AUTH:-false}
      
      # Security
      JWT_SECRET: ${JWT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      
      # Email Configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${SERVICE_PORT:-8081}:8081"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8081/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - entrevistes-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: entrevistes-client-prod
    environment:
      VITE_BACKEND_BASE: ${VITE_BACKEND_BASE}
      VITE_APP_NAME: ${VITE_APP_NAME:-Entrevistes App}
      VITE_APP_VERSION: ${VITE_APP_VERSION:-1.0.0}
    depends_on:
      service:
        condition: service_healthy
    ports:
      - "${CLIENT_PORT:-5174}:5173"
    restart: unless-stopped
    networks:
      - entrevistes-network

  nginx:
    image: nginx:alpine
    container_name: entrevistes-nginx-prod
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - client
      - service
    restart: unless-stopped
    networks:
      - entrevistes-network

volumes:
  db_data_prod:
    driver: local
  nginx_logs:
    driver: local

networks:
  entrevistes-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
